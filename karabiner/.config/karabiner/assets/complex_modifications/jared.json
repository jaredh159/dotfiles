{
  "title": "jareds bag of tricks",
  "rules": [
    {
      "description": "a + f (held down) = open Alfred",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "simultaneous": [
              {
                "key_code": "a"
              },
              {
                "key_code": "f"
              }
            ],
            "modifiers": {
              "optional": ["any"]
            }
          },
          "parameters": {
            "basic.to_if_held_down_threshold_milliseconds": 100
          },
          "to_if_held_down": [
            {
              "shell_command": "open -a 'Alfred 4.app'"
            }
          ]
        }
      ]
    },
    {
      "description": "hold down v + s = open visual studio code",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "simultaneous": [
              {
                "key_code": "v"
              },
              {
                "key_code": "s"
              }
            ],
            "modifiers": {
              "optional": ["any"]
            }
          },
          "parameters": {
            "basic.to_if_held_down_threshold_milliseconds": 100
          },
          "to_if_held_down": [
            {
              "shell_command": "open -a 'Visual Studio Code.app'"
            }
          ]
        }
      ]
    },
    {
      "description": "hold down k + t = open kitty",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "simultaneous": [
              {
                "key_code": "t"
              },
              {
                "key_code": "k"
              }
            ],
            "modifiers": {
              "optional": ["any"]
            }
          },
          "parameters": {
            "basic.to_if_held_down_threshold_milliseconds": 100
          },
          "to_if_held_down": [
            {
              "shell_command": "open -a Kitty.app"
            }
          ]
        }
      ]
    },
    {
      "description": "d + f = backtick",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "simultaneous": [
              {
                "key_code": "d"
              },
              {
                "key_code": "f"
              }
            ],
            "modifiers": {
              "optional": ["any"]
            }
          },
          "to": [
            {
              "key_code": "grave_accent_and_tilde"
            }
          ]
        }
      ]
    },
    {
      "description": "j + k = equals",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "simultaneous": [
              {
                "key_code": "j"
              },
              {
                "key_code": "k"
              }
            ],
            "modifiers": {
              "optional": ["any"]
            }
          },
          "to": [
            {
              "key_code": "equal_sign"
            }
          ]
        }
      ]
    },
    {
      "description": "space > shift with other keys, space if alone",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "key_code": "spacebar",
            "modifiers": {
              "optional": ["any"]
            }
          },
          "to": [
            {
              "key_code": "right_shift"
            }
          ],
          "to_if_alone": [
            {
              "key_code": "spacebar"
            }
          ],
          "parameters": {
            "basic.to_if_alone_timeout_milliseconds": 2000
          }
        }
      ]
    },
    {
      "description": "forward delete without hosing",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "key_code": "delete_forward",
            "modifiers": {
              "optional": ["any"]
            }
          },
          "to": [
            {
              "key_code": "delete_or_backspace"
            }
          ]
        }
      ]
    },
    {
      "description": "backspace > shift with other keys, escape if alone",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "key_code": "delete_or_backspace",
            "modifiers": {
              "optional": ["any"]
            }
          },
          "to": [
            {
              "key_code": "left_shift"
            }
          ],
          "to_if_alone": [
            {
              "key_code": "escape"
            }
          ]
        }
      ]
    },
    {
      "description": "alt + single quote = backtick",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "key_code": "quote",
            "modifiers": {
              "mandatory": ["option"]
            }
          },
          "to": [
            {
              "key_code": "grave_accent_and_tilde"
            }
          ]
        }
      ]
    },
    {
      "description": "command + enter = tab",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "key_code": "return_or_enter",
            "modifiers": {
              "mandatory": ["left_command"]
            }
          },
          "to": [
            {
              "key_code": "tab"
            }
          ]
        }
      ]
    },
    {
      "description": "Change option + h/j/k/l to Arrows",
      "manipulators": [
        {
          "type": "basic",
          "from": {
            "key_code": "h",
            "modifiers": {
              "mandatory": ["option"],
              "optional": ["any"]
            }
          },
          "to": [
            {
              "key_code": "left_arrow"
            }
          ]
        },
        {
          "type": "basic",
          "from": {
            "key_code": "j",
            "modifiers": {
              "mandatory": ["option"],
              "optional": ["any"]
            }
          },
          "to": [
            {
              "key_code": "down_arrow"
            }
          ]
        },
        {
          "type": "basic",
          "from": {
            "key_code": "k",
            "modifiers": {
              "mandatory": ["option"],
              "optional": ["any"]
            }
          },
          "to": [
            {
              "key_code": "up_arrow"
            }
          ]
        },
        {
          "type": "basic",
          "from": {
            "key_code": "l",
            "modifiers": {
              "mandatory": ["option"],
              "optional": ["any"]
            }
          },
          "to": [
            {
              "key_code": "right_arrow"
            }
          ]
        }
      ]
    }
  ]
}
